#include <iostream>
#include <vector>

bool containsDuplicate(std::vector<int>& nums, int index) {
    // Base case: If we reach the end of the array, no duplicates found.
    if (index == nums.size() - 1) {
        return false;
    }

    // Compare the current element with all the elements to its right.
    for (int i = index + 1; i < nums.size(); ++i) {
        if (nums[index] == nums[i]) {
            return true; // Duplicate found
        }
    }

    // Recursively check the next element.
    return containsDuplicate(nums, index + 1);
}

int main() {
    std::vector<int> nums = {1, 2, 3, 4, 5, 6, 2}; // Sample array with a duplicate (2)
    
    if (containsDuplicate(nums, 0)) {
        std::cout << "Duplicates found in the array." << std::endl;
    } else {
        std::cout << "No duplicates found in the array." << std::endl;
    }
    
    return 0;
}
